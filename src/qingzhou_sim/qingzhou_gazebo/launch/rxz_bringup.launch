<?xml version="1.0"?>
<launch>

    <!-- <arg name="model" default="$(find qingzhou_description)/urdf/qingzhou.urdf.xacro"/> -->
    <!-- <arg name="namespace" default="/qingzhou" /> -->

    <arg name="first_robot" default="robot_1" />
    <arg name="second_robot"  default="robot_2"/>
    <!--设置起始位置-->
    <arg name="first_robot_x_pos" default="0.0"/>
    <arg name="first_robot_y_pos" default="-0.0"/>
    <arg name="first_robot_z_pos" default="0.0"/>
 
    <arg name="second_robot_x_pos" default="0.5"/>
    <arg name="second_robot_y_pos" default="0.5"/>
    <arg name="second_robot_z_pos" default="0.0"/>

    <!--不需要改动-->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="world_name" value="$(find qingzhou_gazebo)/worlds/playground.world" />
    
    <!-- 不需要改动 Gazebo  -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)" />
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <!--设置第一个小车模型 prefix:=$(arg first_robot)-->               
    <group ns="$(arg first_robot)">
        <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find qingzhou_description)/urdf/qingzhou.urdf.xacro'"/>
        <!-- 控制器代码 -->
        <rosparam file="$(find qingzhou_control)/config/ctrl_ackermann_steering_controller.yaml" command="load" ns="$(arg first_robot)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_gains.yaml" command="load" ns="$(arg first_robot)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_joint_state_publisher.yaml" command="load" ns="$(arg first_robot)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_qingzhou_hardware_gazebo.yaml" command="load" ns="$(arg first_robot)" />
        <!-- Spawn the controllers -->
        <node pkg="controller_manager" type="spawner" name="controller_spawner" ns="$(arg first_robot)"
            args="joint_state_publisher ackermann_steering_controller"
            output="screen" respawn="false" />

        <!-- 运行robot_state_publisher节点，发布tf  -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
            <param name="publish_frequency" value="50.0"/>
        </node>

        <!-- 在gazebo中加载机器人模型-->
        <node name="spawn_vehicle" pkg="gazebo_ros" type="spawn_model"
            args="-urdf -param robot_description -model $(arg first_robot)
                -x $(arg first_robot_x_pos) -y $(arg first_robot_y_pos) -z $(arg first_robot_z_pos)"
            respawn="false" output="screen" />

        <node pkg="tf" type="static_transform_publisher" name="ydlidar_link_to_laser" args="0.0 0.0 0.0 0.0 0 0  /ydlidar_link /first_robot/ydlidar_link  20" />
        <node pkg="tf" type="static_transform_publisher" name="camera_link_to_bot" args="0.0 0.0 0.0 3.14 0  0    /camera_link  first_robot/  20" />

        <node pkg="qingzhou_description" type="gazebo_odometry.py" name="gazebo_odometry" />
    </group>

</launch>